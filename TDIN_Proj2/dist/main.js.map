{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/electron-cgi/connection-builder.js","webpack:///./node_modules/electron-cgi/connection.js","webpack:///./node_modules/electron-cgi/index.js","webpack:///./node_modules/electron-cgi/request.js","webpack:///./node_modules/electron-cgi/tab-separated-input-stream-parser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng.js","webpack:///./node_modules/uuid/v4.js","webpack:///./src/main.ts","webpack:///external \"child_process\"","webpack:///external \"crypto\"","webpack:///external \"electron\"","webpack:///external \"events\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":["url","require","path","ConnectionBuilder","window","createWindow","BrowserWindow","width","height","loadURL","format","pathname","join","__dirname","protocol","slashes","on","app","process","platform","quit","connection","connectTo","build","onDisconnect","console","log","send","response","close"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","const { spawn } = require('child_process');\nconst Connection = require('./connection');\n\nfunction ConnectionBuilder() {\n    var spawnArguments = null;\n    this.connectTo = (command, ...args) => {\n        spawnArguments = {\n            command,\n            args\n        };\n        return this;\n    };\n    this.build = () => {\n        if (!spawnArguments) {\n            throw new Error('Use connectTo(pathToExecutable, [arguments]) to specify to which executable to connect');\n        }\n        const executable = spawn(spawnArguments.command, spawnArguments.args);\n        return new Connection(executable.stdin, executable.stdout);\n    };\n}\n\nexports.ConnectionBuilder = ConnectionBuilder;\n","const Request = require('./request');\nconst TabSeparatedInputStreamParser = require('./tab-separated-input-stream-parser');\n\nfunction Connection(outStream, inStream) {\n    const responseHandlersQueue = [];\n    const inputStreamParser = new TabSeparatedInputStreamParser();\n\n    inStream.setEncoding('utf8');\n    inStream.on('data', (chunk) => {\n        inputStreamParser.addPartial(chunk);\n    });\n\n    inStream.on('close', () => {\n        if (this.onDisconnect) {\n            this.onDisconnect();\n        }\n    });\n\n    inputStreamParser.onResponse(response => {\n        const responseIds = responseHandlersQueue.map(r => r.id);\n        if (responseIds.indexOf(response.id) !== -1) {\n            responseHandlersQueue.splice(responseIds.indexOf(response.id), 1)[0].onResponse(response.result);\n        }\n    });\n\n    const send = (request, onResponse) => {\n        outStream.write(`${JSON.stringify(request)}\\t`);\n        if (onResponse) {\n            responseHandlersQueue.push({\n                id: request.id,\n                onResponse\n            });\n        }\n    };\n\n    this.onDisconnect = null;\n\n    this.send = (type, args = {}, onResponse = null) => {\n        send(new Request(type, args), onResponse);\n    };\n\n    this.close = () => {\n        outStream.end();\n    };\n}\n\nmodule.exports = Connection;","const { ConnectionBuilder } = require(\"./connection-builder\");\nconst { Connection } = require('./connection');\n\nmodule.exports = {\n    ConnectionBuilder,\n    Connection\n};","const uuidv4 = require('uuid/v4');\n\nfunction Request(type, args) {\n    this.type = type;\n    this.id = uuidv4();\n    this.args = JSON.stringify(args);\n}\n\nmodule.exports = Request;","const { EventEmitter } = require('events');\n\nfunction TabSeparatedInputStreamParser() {\n    const responseEmitter = new EventEmitter();\n    let streamInput = '';\n\n    this.addPartial = streamContent => {\n        streamInput += streamContent;\n        while (streamInput.indexOf('\\t') !== -1) {\n            const responseStr = streamInput.substring(0, streamInput.indexOf('\\t'));\n            streamInput = streamInput.substring(streamInput.indexOf('\\t') + 1);\n            let response = null;\n            try{            \n                response = JSON.parse(responseStr);\n            } catch (e){\n                throw new Error(`Invalid incoming JSON: ${responseStr}`);\n            }\n            responseEmitter.emit('response', response);\n        }\n    };\n\n    this.onResponse = handleResponseCallback => {\n        responseEmitter.on('response', handleResponseCallback);\n    };\n}\n\nmodule.exports = TabSeparatedInputStreamParser;","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","const url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst { ConnectionBuilder } = require(\"electron-cgi\");\r\n\r\nimport { app, BrowserWindow } from \"electron\";\r\n\r\nlet window: BrowserWindow | null;\r\n\r\nconst createWindow = () => {\r\n    window = new BrowserWindow({ width: 800, height: 600 });\r\n\r\n    window.loadURL(\r\n        url.format({\r\n            pathname: path.join(__dirname, \"index.html\"),\r\n            protocol: \"file:\",\r\n            slashes: true\r\n        })\r\n    );\r\n\r\n    window.on(\"closed\", () => {\r\n        window = null;\r\n    });\r\n};\r\napp.on(\"ready\", createWindow);\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    if (process.platform !== \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n    if (window === null) {\r\n        createWindow();\r\n    }\r\n});\r\n\r\nlet connection = new ConnectionBuilder()\r\n    .connectTo(\"dotnet\", \"run\", \"--project\", \"./core/Core\")\r\n    .build();\r\n\r\nconnection.onDisconnect = () => {\r\n    console.log(\"lost\");\r\n};\r\n\r\nconnection.send(\"greeting\", \"Mom\", (response: any) => {\r\n    console.log(response);\r\n    connection.close();\r\n});","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}